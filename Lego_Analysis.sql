--Create Schema
CREATE SCHEMA TIL_PORTFOLIO_PROJECTS.MICHAEL_AP;

--Create Tables Under Schema
CREATE TABLE TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_COLOURS(
	ID NUMBER(38,0),
	NAME VARCHAR(28),
	RGB VARCHAR(6),
	IS_TRANS VARCHAR(1)
);

CREATE TABLE TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_INVENTORIES(
	ID NUMBER(38,0),
	VERSION NUMBER(38,0),
	SET_NUM VARCHAR(16)
);

CREATE TABLE TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_INVENTORY_PARTS(
	INVENTORY_ID NUMBER(38,0),
	PART_NUM VARCHAR(15),
	COLOR_ID NUMBER(38,0),
	QUANTITY NUMBER(38,0),
	IS_SPARE VARCHAR(1)
);

CREATE TABLE TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_INVENTORY_SETS(
	INVENTORY_ID NUMBER(38,0),
	SET_NUM VARCHAR(16),
	QUANTITY NUMBER(38,0)
);

CREATE TABLE TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_PARTS(
	PART_NUM VARCHAR(15),
	NAME VARCHAR(223),
	PART_CAT_ID NUMBER(38,0)
);

CREATE TABLE TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_PART_CATEGORIES(
	ID NUMBER(38,0),
	NAME VARCHAR(44)
);

CREATE TABLE TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_SETS(
	SET_NUM VARCHAR(16),
	NAME VARCHAR(95),
	YEAR NUMBER(38,0),
	THEME_ID NUMBER(38,0),
	NUM_PARTS NUMBER(38,0)
);

CREATE TABLE TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_THEMES(
	ID NUMBER(38,0),
	NAME VARCHAR(32),
	PARENT_ID NUMBER(38,0)
    
);

--Populate Data using Insert

INSERT INTO TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_COLOURS (
SELECT *
FROM  TIL_PORTFOLIO_PROJECTS.STAGING.LEGO_COLORS
);

INSERT INTO TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_INVENTORIES (
SELECT *
FROM  TIL_PORTFOLIO_PROJECTS.STAGING.LEGO_INVENTORIES
);

INSERT INTO TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_INVENTORY_PARTS (
SELECT *
FROM  TIL_PORTFOLIO_PROJECTS.STAGING.LEGO_INVENTORY_PARTS
);

INSERT INTO TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_INVENTORY_SETS (
SELECT *
FROM  TIL_PORTFOLIO_PROJECTS.STAGING.LEGO_INVENTORY_SETS
);

INSERT INTO TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_PARTS (
SELECT *
FROM  TIL_PORTFOLIO_PROJECTS.STAGING.LEGO_PARTS
);

INSERT INTO TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_PART_CATEGORIES (
SELECT *
FROM  TIL_PORTFOLIO_PROJECTS.STAGING.LEGO_PART_CATEGORIES
);

INSERT INTO TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_SETS (
SELECT *
FROM  TIL_PORTFOLIO_PROJECTS.STAGING.LEGO_SETS
);

INSERT INTO TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_THEMES (
SELECT *
FROM  TIL_PORTFOLIO_PROJECTS.STAGING.LEGO_THEMES
);



--Set a primary key:
ALTER TABLE TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_COLOURS ADD PRIMARY KEY (ID);
ALTER TABLE TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_INVENTORIES ADD PRIMARY KEY (ID);
--ALTER TABLE TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_INVENTORY_PARTS ADD PRIMARY KEY (PART_NUM);
--ALTER TABLE TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_INVENTORY_SETS DROP PRIMARY KEY;
ALTER TABLE TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_PARTS ADD PRIMARY KEY (PART_NUM);
ALTER TABLE TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_PART_CATEGORIES ADD PRIMARY KEY (ID);
ALTER TABLE TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_SETS ADD PRIMARY KEY (SET_NUM);
ALTER TABLE TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_THEMES ADD PRIMARY KEY (ID);

--Set a foreign key:
ALTER TABLE TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_INVENTORY_SETS ADD FOREIGN KEY (INVENTORY_ID)
REFERENCES TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_INVENTORIES(ID);
ALTER TABLE TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_INVENTORY_SETS ADD FOREIGN KEY (SET_NUM)
REFERENCES TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_SETS(SET_NUM);

ALTER TABLE TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_INVENTORIES ADD FOREIGN KEY (SET_NUM)
REFERENCES TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_SETS(SET_NUM);

ALTER TABLE TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_SETS ADD FOREIGN KEY (THEME_ID)
REFERENCES TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_THEMES(ID);

ALTER TABLE TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_PARTS ADD FOREIGN KEY (PART_CAT_ID)
REFERENCES TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_PART_CATEGORIES(ID);

ALTER TABLE TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_INVENTORY_PARTS ADD FOREIGN KEY (INVENTORY_ID)
REFERENCES TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_INVENTORIES(ID);
ALTER TABLE TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_INVENTORY_PARTS ADD FOREIGN KEY (COLOR_ID)
REFERENCES TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_COLOURS(ID);
ALTER TABLE TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_INVENTORY_PARTS ADD FOREIGN KEY (PART_NUM)
REFERENCES TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_PARTS(PART_NUM);

--Analysing Lego_Parts : Analysis of Lego Sets: Analyze LEGO parts and sets to uncover insights like identifying unique parts and analyzing their usage across different sets.
SELECT * 
    FROM TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_PARTS;
    --where part_num = '3005';

SELECT * 
    FROM TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_INVENTORY_PARTS;
    --where part_num = '3005';

SELECT * 
    FROM TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_INVENTORIES;

SELECT * 
    FROM TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_SETS;
    --GROUP BY 1;
    --GROUP BY 1;

--Creating a view    
CREATE VIEW unique_sets AS
WITH UNIQUE_PARTS AS
(
SELECT p.part_num
      ,p.name as part_name
      --,s.name as set_name
      ,count(distinct i.set_num) as unique_set
      --,c.id
      --,i.id
      FROM TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_PARTS p
      join TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_INVENTORY_PARTS ip on p.part_num=ip.part_num
      join TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_INVENTORIES i on i.id=ip.inventory_id
     --join TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_SETS s on s.set_num=d.set_num
      group by 1,2
      having count(distinct i.set_num) = 1
      order by 1
 )     
SELECT s.name as set_name
      ,s.year
      ,t.name as theme
      ,count(up.part_num) as unique_parts
      ,count(p.name) as parts
      ,count(up.part_num)/count(p.name) as uniqueness 
    FROM TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_PARTS p
    JOIN TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_INVENTORY_PARTS ip on p.part_num = ip.part_num
    JOIN TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_INVENTORIES i on ip.inventory_id = i.id
    JOIN TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_SETS s on i.set_num = s.set_num
    LEFT JOIN TIL_PORTFOLIO_PROJECTS.MICHAEL_AP.LEGO_THEMES t on t.id = s.theme_id
    LEFT JOIN UNIQUE_PARTS up on up.part_num = p.part_num
    GROUP BY 1,2,3;
      
